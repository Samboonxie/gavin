Лучшее шоу:

    Gavin Barraclough
    Flat 20, 83 Newton Street,
    Manchester,
    M1 1EP,
    U.K.


Комментарии жюри:

    Чтобы собрать и запустить (на любой платформе, без прав root'а):

        make gavin

    Чтобы насладиться результатом (на x86-компьютере с Linux'ом):

        su

    # Создайте дискету с файловой системой ext2 (mke2fs /dev/fd0),
    # примонтируйте её к /mnt/floppy

        cp kernel fs.tar lilo.conf boot.b /mnt/floppy

    # Если ваша версия LILO не 21.4, воспользуйтесь прилагающимся boot.b
    # Если файл устройства вашей дискеты не /dev/fd0, отредактируйте lilo.conf соответствующим образом

        lilo -C /mnt/floppy/lilo.conf

    # Загрузитесь с дискеты на c86-компьютере с PS/2 клавиатурой и мышью
    # Отодвиньте окно от угла

        vi gavin.c

    # Прокручивайте при помощи стрелок вверх и вниз

        sh

    # Можно открыть несколько окон командного интерпретатора

        vi gavin.hint
        prim

    # Нажмите и держите любую клавишу

    В разные года мы видели программы, которые делают core dump на "неправильной"
    архитектуре сразу (1984/mullender) или через некоторое время (2001/bellard).
    Эта программа будет успешно компилироваться и выполнятся на любой архитектуре --
    трюк в том, что результат будет полезен лишь на некой конкретной архитектуре.
    Мы ещё не решили, запрещать ли подобное в будущих конкурсах.

    Если вы не хотите возиться с дискетой или у вас GRUB, см. следующие заметки автора.
    Вы можете положить дополнительные файлы в fs.tar, чтобы потом смотреть при помощи vi.
    Если вы вообще не хотите перезагружать компьютер, присмотритесь к Qemu, его можно
    скачать с http://bellard.org/ (Fabrice Bellard -- победитель IOCCC 2001), но
    возможности ОС будут ограничены (замените -DK=0 на -DK=1 в Makefile,
    также, вам нужно будет подвигать мышь для стартового обновления экрана).

    Жюри может написать ещё несколько программ для этой ОС. Какие ограничения у
    этих программ? Что в них можно и что нельзя?

    Программа под названием "prim", написанная жюри, вычисляет и выводит простые числа.

Избранные комментарии автора:

    Это 32-битная мультизадачная графическая операционная система для x86-компьютеров,
    с файловой системой, поддержкой загрузки и исполнения пользовательских программ
    в формате ELF, с драйверами PS/2 мыши и клавиатуры и с графикой VESA. И с командной
    оболочкой. И с приложением -- простым просмотрщиком файлов.

    ОС построена на основе традиционного монолитного ядра с одной точкой входа для
    системных вызовов. Приложения используют корпоративную многозадачность. Им можно
    отправлять различные сообщения (например, 'инициализироваться', 'нажатие клавиши',
    'отрисовать в буфер') через точку входа и они вернут управление системе, когда
    выполнят нужную работу. Приложению передаётся указатель на его структуру задачи,
    которая частично задана системой, и частично оставлена для использования самим
    приложением.

    Это программа компилируется в утилиту, которая генерирует образ ядра, то есть программа собирается,
    Makefile запускает её, перенаправляя вывод в файл под названием 'kernel'.
    Затем Makefile соберёт корневую файловую систему. Это потребует пересборки программы с
    другими флагами компиляции и создания tar-файла, содержащего полученные программы
    (файловая система, поддерживаемая ОС -- это tar).

    См. дальнейшую информацию по использованию в 'gavin_install.txt' [на русском -- 'gavin_install_ru.txt']

    Имена 'sh' и 'vi' важны, их нельзя менять.

    Известные 'возможности'.

    Известные проблемы слишком многочисленны, чтобы их перечислять.

    Если мышь выходит за левый край экрана, она выходит справа, и наоборот.
    Если она выходит за верхний или нижний край, её ничто не остановит и она испортит память.

    Файловая система в некотором роде оптимистична, например, если набрать 'shell' в
    командной строке, то запустится программа 'sh': считается, что 'sh' -- это то же,
    что и 'shell'

    ELF'ы загружаются на некорректные адреса, и их точка входа должна быть началом текстового
    сегмента.

    Драйвер клавиатуры работает только с основными алфавитно-цифровыми клавишами,
    но не с такими, как 'shift' или 'backspace'.

    В просмотрщике файлов ('vi'), клавиши Вверх/Вниз и PgUp/PgDown прокручивают по одной
    строке. Вас ничто не остановит от прокручивания выше верха файла. Нажатие других клавиш
    может иметь непредсказуемый эффект.

    x86 раскручивается в 32-битный режим за 6 инструкций, ещё за 4 устанавливаются сегменты
    данных и стека и указатель на стек, что позволяет запустить код на Си. Кроме этого,
    есть около десятка инструкций для переключения в графический режим. В общем, этого
    достаточно мало по сравнению с размером Си-программы. Также, строка в основном
    состоит из данных -- заголовок ядра в стиле Linux'а для загрузчика, таблицы дескрипторов
    защищённого режима, раскладки клавиатуры, и так далее.
    (Также должен отметить, что строка содержит минифункции для выполнения x86-инструкций
    'in' и 'out' -- чтобы работать с мышью и клавиатурой из Си-кода).

    Портирование на другую архитектуру должно быть отностильно простым* -- просто нужно
    заменить строку на содержащую данные и код, подходящие для новой платформы.
    Доступ к данным осуществляется относительно макроса 'V' -- так что его можно заменить
    при необходимости (0x90200 -- это адрес, по которому загрузчик Linux'а загружает
    образ x86-ядра).

    * ;-)
